# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-09-26 20:53
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectName', models.CharField(max_length=128, verbose_name='Project name')),
                ('projectStatus', models.PositiveIntegerField(choices=[(1, 'Submitted'), (2, 'Accepted'), (3, 'Rejected'), (4, 'Cancelled'), (5, 'Waiting list')], default=1, verbose_name='Project status')),
                ('createDate', models.DateField(auto_now_add=True)),
                ('modifyDate', models.DateField(auto_now=True)),
                ('firstname', models.CharField(blank=True, max_length=30, verbose_name='Firstname')),
                ('lastname', models.CharField(blank=True, max_length=30, verbose_name='Lastname')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('homepage', models.URLField(blank=True, verbose_name='Project homepage url')),
                ('projecttype', models.PositiveIntegerField(choices=[(1, 'Maker or NGO (no sales at the fair, free booth)'), (2, 'Maker with the intention of selling something at the fair (79 Euro per booth)'), (3, 'Startup exhibitor'), (4, 'Professional exhibitor')], default=1, verbose_name='Project type')),
                ('language', models.PositiveIntegerField(choices=[(1, 'german'), (2, 'english')], default=1, verbose_name='In which language do you want to communicate?')),
                ('hear', models.CharField(blank=True, max_length=20, verbose_name='How did you hear from us?')),
                ('recommendation', models.CharField(blank=True, max_length=50, verbose_name='Recommendation')),
                ('generalComment', models.TextField(blank=True, verbose_name='Comment')),
                ('internalComment', models.TextField(blank=True, verbose_name='Internal comments')),
                ('descriptionDE', models.TextField(blank=True, max_length=900, verbose_name='Description text of your project (German)')),
                ('descriptionEN', models.TextField(blank=True, max_length=900, verbose_name='Description text of your project (English)')),
                ('projectArea', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, '3D Printing'), (2, 'Arduino'), (3, 'Art'), (4, 'Biohacking'), (5, 'Bionics'), (6, 'Crafts'), (7, 'Design'), (8, 'Digital Fabrication'), (9, 'Education'), (10, 'Electronics'), (11, 'Fashion'), (12, 'Food & Agriculture'), (13, 'Garden'), (14, 'Healthcare'), (15, 'Home Automation'), (16, 'Interaction'), (17, 'Internet of Things'), (18, 'Model Making'), (19, 'New Materials'), (20, 'Raspberry Pi'), (21, 'Robot & Drones'), (22, 'Science'), (23, 'Social design'), (24, 'Sustainability'), (25, 'Startup / Small Business'), (26, 'Tiny Houses'), (27, 'Transportation'), (28, 'Wearables'), (29, 'Wellness'), (30, 'Young Makers'), (31, 'Other')], max_length=83, verbose_name='Which area is your project in?')),
                ('logoOrg', models.ImageField(blank=True, upload_to=b'projects/logos', verbose_name='Organisation logo')),
                ('logo', models.ImageField(blank=True, upload_to=b'projects/logos', verbose_name='Project logo')),
                ('logoTeam', models.ImageField(blank=True, upload_to=b'projects/logos', verbose_name='Team logo')),
                ('video', models.URLField(blank=True, verbose_name='Project video url')),
                ('boothDescription', models.TextField(blank=True, max_length=300, verbose_name='Booth description')),
                ('boothLocation', models.CharField(blank=True, max_length=10, verbose_name='Booth location')),
                ('boothArea', models.PositiveIntegerField(choices=[(0, 'in progress'), (1, '3D Printing'), (2, 'AR & VR'), (3, 'Biohacking/ Citizen Science'), (4, 'Creativity, Art & Sound'), (5, 'Design & Craft'), (6, 'DIY'), (7, 'Electronic Innovators'), (8, 'FabLab'), (9, 'FashTech'), (10, 'Foodmaker'), (11, 'Funk & Radio'), (12, 'Green Maker'), (13, 'Robotics'), (14, 'Tools'), (15, 'Workshops')], default=0, verbose_name='Booth area')),
                ('boothStatus', models.PositiveIntegerField(choices=[(1, 'Submitted'), (2, 'Accepted'), (3, 'Rejected'), (4, 'Booth detailing'), (5, 'Service completed')], default=1, verbose_name='Booth status')),
                ('boothHallStatus', models.PositiveIntegerField(choices=[(1, 'Discrepancy in the hall plan'), (2, 'in the hall plan')], default=1, verbose_name='Hall state')),
                ('boothTables', models.PositiveIntegerField(choices=[(0, 'No table'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0, verbose_name='How many tables do you need?')),
                ('boothChairs', models.PositiveIntegerField(choices=[(0, 'No chair'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7')], default=0, verbose_name='How many chairs do you need?')),
                ('boothBenches', models.PositiveIntegerField(choices=[(0, 'No bench'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8')], default=0, verbose_name='How many benches do you need?')),
                ('boothTablesPlan', models.PositiveIntegerField(blank=True, default=0, verbose_name='Tables planned')),
                ('boothTablesRes', models.PositiveIntegerField(blank=True, default=0, verbose_name='Tables reserve')),
                ('boothChairsPlan', models.PositiveIntegerField(blank=True, default=0, verbose_name='Chairs planned')),
                ('boothChairsRes', models.PositiveIntegerField(blank=True, default=0, verbose_name='Chairs reserve')),
                ('boothBenchesPlan', models.PositiveIntegerField(blank=True, default=0, verbose_name='Benches planned')),
                ('boothBenchesRes', models.PositiveIntegerField(blank=True, default=0, verbose_name='Benches reserve')),
                ('boothSize', models.CharField(blank=True, max_length=20, verbose_name='Booth size')),
                ('boothSizePlan', models.CharField(blank=True, max_length=20, verbose_name='Booth size planned')),
                ('boothPower', models.PositiveIntegerField(choices=[(1, 'no power required'), (2, 'up to 5A, 230V -> max. 1150W'), (3, 'up to 10A, 230V -> max. 2300W'), (4, 'up to 16A, 230V -> max. 3200W')], default=1, verbose_name='Power')),
                ('boothPowerPlan', models.PositiveIntegerField(choices=[(1, 'no power required'), (2, 'up to 5A, 230V -> max. 1150W'), (3, 'up to 10A, 230V -> max. 2300W'), (4, 'up to 16A, 230V -> max. 3200W')], default=1, verbose_name='Power planned')),
                ('boothExtras', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'More floor space (please specify below)'), (2, 'More tables or chairs'), (3, "I don't need tables, I have my own system"), (4, 'My booth needs a back wall'), (5, 'Outdoor space'), (6, 'Internet access'), (7, 'Three-phase AC'), (8, 'A corner booth (without back wall)'), (9, 'My project uses radio frequencies (please specify below)')], max_length=17, verbose_name='Booth extras')),
                ('boothExtrasComment', models.TextField(blank=True, max_length=300, verbose_name='Here you have the chance to leave us further comments regarding your booth')),
                ('boothOwn', models.TextField(blank=True, max_length=300, verbose_name='Own equipment')),
                ('boothSafety', models.TextField(blank=True, max_length=300, verbose_name='Safety precautions')),
                ('boothComment', models.TextField(blank=True, verbose_name='Internal comments')),
                ('boothLastMinute', models.TextField(blank=True, verbose_name='Last minute')),
                ('serviceTickets', models.PositiveIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20')], default=0, verbose_name='How many tickets do you need?')),
                ('serviceTicketsGiven', models.PositiveIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20')], default=0, verbose_name='How many tickets have been given')),
                ('serviceParking', models.PositiveIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0, verbose_name='How many parking tickets do you need?')),
                ('serviceParkingGiven', models.PositiveIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0, verbose_name='How many parking tickets have been given')),
                ('serviceStatus', models.PositiveIntegerField(choices=[(1, ' '), (1, 'in Progress'), (2, 'final')], default=0, verbose_name='Ticket status')),
                ('serviceDistribution', models.PositiveIntegerField(choices=[(1, 'during Check-in'), (2, 'desired in advance by mail'), (3, 'sended via mail')], default=1, verbose_name='Distribution')),
                ('serviceDistributed', models.CharField(blank=True, max_length=30, verbose_name='Distributed')),
                ('serviceSponsorlevel', models.CharField(blank=True, max_length=30, verbose_name='Sponsorlevel')),
                ('serviceAreabranding', models.CharField(blank=True, max_length=30, verbose_name='Areabranding')),
                ('serviceWorkshop', models.PositiveIntegerField(choices=[(1, 'none'), (2, 'agreed'), (3, 'at own booth'), (4, 'in a workshop area'), (5, 'at booth & in workshop area')], default=1, verbose_name='Workshop')),
                ('serviceTalk', models.PositiveIntegerField(choices=[(1, 'none agreed'), (2, '1 time'), (3, '2 times')], default=1, verbose_name='Talk')),
                ('serviceComments', models.TextField(blank=True, max_length=300, verbose_name='Agreements')),
                ('serviceInternalComments', models.TextField(blank=True, max_length=300, verbose_name='Internal comments')),
                ('talkComment', models.TextField(blank=True, verbose_name='Here you have the chance to leave us further comments regarding your talk')),
                ('workshopComment', models.TextField(blank=True, verbose_name='Here you have the chance to leave us further comments regarding your workshop')),
                ('accepted', models.BooleanField(default=False, editable=False)),
                ('year', models.PositiveIntegerField(editable=False, verbose_name='Conference year this project belongs to')),
                ('modifyBy', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectParticipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAdmin', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='participants',
            field=models.ManyToManyField(blank=True, editable=False, related_name='projectparticipation', through='project.ProjectParticipants', to=settings.AUTH_USER_MODEL),
        ),
    ]
